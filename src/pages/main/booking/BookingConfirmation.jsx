import React, { useEffect, useState } from 'react';
import { useLocation, useNavigate, useParams } from 'react-router-dom';
import { Button, Container, Row, Col, Table, Spinner, Alert, Form } from 'react-bootstrap';
import axios from 'axios';
import dayjs from 'dayjs';
import 'dayjs/locale/th';

const BASE_URL = import.meta.env.VITE_BASE_URL;

const BookingConfirmation = () => {
  const { state } = useLocation();
  const { paymentId } = useParams();
  const navigate = useNavigate();

  const [paymentData, setPaymentData] = useState(state || null);
  const [user, setUser] = useState(null);

  const [loading, setLoading] = useState(!!paymentId);
  const [error, setError] = useState(null);
  const [inputPaymentId, setInputPaymentId] = useState('');
  const [isFetchingById, setIsFetchingById] = useState(false);

  // ‡πÇ‡∏´‡∏•‡∏î user ‡∏à‡∏≤‡∏Å localStorage ‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
  useEffect(() => {
    const userData = localStorage.getItem('user');
    if (userData) {
      setUser(JSON.parse(userData));
    }
  }, []);

  // ‡πÇ‡∏´‡∏•‡∏î payment data ‡∏´‡∏≤‡∏Å‡∏°‡∏µ paymentId ‡∏´‡∏£‡∏∑‡∏≠ state
  useEffect(() => {
    if (paymentId) {
      fetchPayment(paymentId);
    } else if (state) {
      setPaymentData(state);
    }
  }, [paymentId, state]);

  const fetchPayment = async (id) => {
    setLoading(true);
    try {
      const res = await axios.get(`${BASE_URL}/api/payment/${id}`);
      setPaymentData(res.data);
      setError(null);
    } catch (err) {
      console.error('Error fetching payment:', err);
      setPaymentData(null);
      setError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ID ‡∏ô‡∏µ‡πâ');
    } finally {
      setLoading(false);
    }
  };

  const handleManualSearch = async (e) => {
    e.preventDefault();
    if (!inputPaymentId.trim()) return;

    setIsFetchingById(true);
    await fetchPayment(inputPaymentId);
    setIsFetchingById(false);
  };

  if (loading || isFetchingById) {
    return (
      <Container className="text-center my-5">
        <Spinner animation="border" />
        <p className="mt-3">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
      </Container>
    );
  }

  if (!paymentData) {
    return (
      <Container className="my-5" style={{ maxWidth: 500 }}>
        <h5 className="mb-4 text-center">‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h5>
        {error && <Alert variant="danger" dismissible>{error}</Alert>}
        <Form onSubmit={handleManualSearch}>
          <Form.Group controlId="paymentId">
            <Form.Label>Payment ID</Form.Label>
            <Form.Control
              type="text"
              placeholder="‡πÄ‡∏ä‡πà‡∏ô 123456"
              value={inputPaymentId}
              onChange={(e) => setInputPaymentId(e.target.value)}
            />
          </Form.Group>
          <div className="mt-3 d-flex justify-content-between">
            <Button variant="secondary" onClick={() => navigate('/')}>‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</Button>
            <Button variant="primary" type="submit" disabled={isFetchingById}>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</Button>
          </div>
        </Form>
      </Container>
    );
  }

  const {
    roomIds,
    checkIn,
    checkOut,
    adults,
    children,
    totalPrice,
    dueDate
  } = paymentData;

  const handleMockPayment = async () => {
  try {
    const res = await axios.post(`${BASE_URL}/api/payment/confirm/${paymentData._id}`);
    console.log('Payment confirmed:', res.data);
    alert('‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß" ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    setPaymentData({ ...paymentData, status: 'paid' }); // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  } catch (err) {
    console.error(err);
    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞');
  }
};

  const formatDate = (dateStr) =>
    dateStr ? dayjs(dateStr).locale('th').format('DD MMMM YYYY') : '-';

  return (
    <Container className="my-5 p-4 border rounded shadow-sm bg-white" style={{ maxWidth: 700 }}>
      <div className="text-center mb-4">
        <img src="https://www.baraliresort.com/images/logo.png" alt="Barali Logo" style={{ height: 80 }} />
        <h5 className="mt-3">‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h5>
      </div>

      <Row className="mb-3">
        <Col><strong>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏à‡∏≠‡∏á</strong></Col>
      </Row>
      <Table bordered>
        <tbody>
          <tr>
            <td>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏à‡∏≠‡∏á</td>
            <td>{user?.name || '-'}</td>
          </tr>
          <tr>
            <td>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</td>
            <td>{user?.email || '-'}</td>
          </tr>
        </tbody>
      </Table>

      <Row className="mt-4 mb-3">
        <Col><strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</strong></Col>
      </Row>
      <Table bordered>
        <tbody>
          <tr>
            <td>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô</td>
            <td>{formatDate(checkIn)}</td>
          </tr>
          <tr>
            <td>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ó‡πå</td>
            <td>{formatDate(checkOut)}</td>
          </tr>
          <tr>
            <td>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á</td>
            <td>{Array.isArray(roomIds) ? roomIds.length : '-'}</td>
          </tr>
          <tr>
            <td>‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà</td>
            <td>{adults ?? '-'}</td>
          </tr>
          <tr>
            <td>‡πÄ‡∏î‡πá‡∏Å</td>
            <td>{children ?? '-'}</td>
          </tr>
        </tbody>
      </Table>

      <Row className="mt-4 mb-3">
        <Col><strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</strong></Col>
      </Row>
      <Table bordered>
        <tbody>
          <tr>
            <td>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°</td>
            <td>{!isNaN(parseInt(totalPrice)) ? parseInt(totalPrice).toLocaleString() : '-'} ‡∏ö‡∏≤‡∏ó</td>
          </tr>
          <tr>
            <td>‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞</td>
            <td>{formatDate(dueDate)}</td>
          </tr>
        </tbody>
      </Table>

      {paymentData?.status !== 'paid' ? (
  <>
    <Row className="mt-4 mb-3">
      <Col><strong>QR Code ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô (‡∏à‡∏≥‡∏•‡∏≠‡∏á)</strong></Col>
    </Row>
    <div className="text-center mb-3">
      <img
        src={`https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=https://www.youtube.com/watch?v=8WCmS9fIlZo`}
        alt="QR Code"
        style={{ border: '1px solid #ccc', padding: 10, background: '#fff' }}
      />
      <div className="text-muted mt-2" style={{ fontSize: '0.9em' }}>
        ‡∏™‡πÅ‡∏Å‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô (‡∏õ‡∏•‡∏≠‡∏° ‡πÜ üòÜ)
      </div>
    </div>

    <div className="text-center">
      <Button variant="success" onClick={handleMockPayment}>
        ‡∏â‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß (‡∏à‡∏≥‡∏•‡∏≠‡∏á)
      </Button>
    </div>
  </>
) : (
  <Alert variant="success" className="mt-4 text-center">
    ‚úÖ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß
  </Alert>
)}
    </Container>
  );
};

export default BookingConfirmation;
